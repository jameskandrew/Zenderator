    /**
     *
     * @return Models\{{ routes['create'].singular }}Model|Models\{{ routes['create'].singular }}Model[]
     */
    public function hydrate($raw{{ routes['create'].singular }})
    {
        // if the entity is an array and is empty, return false. Nothing to hydrate.
        if(is_array($raw{{ routes['create'].singular }}) && empty($raw{{ routes['create'].singular }})){
            return null;
        }

        if(
            // If the data given IS an array
            is_array($raw{{ routes['create'].singular }}) &&
            // And Is NOT an associative array
            !(array_keys($raw{{ routes['create'].singular }}) !== range(0, count($raw{{ routes['create'].singular }}) - 1)) &&
            // And is NOT an empty array...
            !count($raw{{ routes['create'].singular }}) == 0
        ){
            // Then we have to hydrate each element. Recursively. Aww yeah.
            $array = [];
            foreach($raw{{ routes['create'].singular }} as $index => ${{ routes['create'].singular|lower }}){
                $array[$index] = $this->hydrate(${{ routes['create'].singular|lower }});
            }
            return $array;
        }else{
            return new Models\{{ routes['create'].singular }}Model($this->sdkClient, $raw{{ routes['create'].singular }});
        }
    }
