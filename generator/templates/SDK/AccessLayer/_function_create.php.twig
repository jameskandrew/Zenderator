
    /**
     * @return Models\{{ route.singular }}Model
     * @throws Exceptions\SDKException
     **/
    public function {{ route.function }}($propertyArray)
    {
        /** @var $response \GuzzleHttp\Psr7\Response */
        $endpoint = "{{ route.pattern }}";
        $method = "{{ route.method }}";
        $headers = [
            'Accept' => 'application/json',
        ];
        $response = $this->request(
            $method,
            $endpoint,
            [
                'headers' => $headers,
                'body' => json_encode($propertyArray),
            ]
        );
        $body = $response->getBody()->getContents();
        if(json_decode($body) === null){
            throw new Exceptions\SDKException("Response from API ({$endpoint}) was not expected JSON: " . var_export($body, true));
        }
        $body = json_decode($body, true);
        return $this->hydrate($body['{{ route.singular }}']);
    }

    /**
     * @return Models\{{ route.singular }}Model;
     */
    public function {{ route.function }}FromObject(\Gone\SDK\Common\Abstracts\AbstractModel ${{ route.singular }})
    {
        return $this->{{ route.function }}(
            ${{ route.singular }}->__toUpsertArray()
        );
    }

